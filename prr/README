Instructions to run the assignment:

The default congestion control algorithm is changed to "reno". To run the assignment, run:

sudo ./run.sh

Answers to quiz questions:

1,
a, The result of experiments on Mininet is affected by the resource of the host where Mininet runs on. More powerful host provides more stable result. Experiments on hardware don't have this problem.

b, On Hardware different hosts and swithes perform independently. While in Mininet they compete for the same CPU resource and thus affect the behavior of each other.

2, The cwnd of a flow falfs when there are 3 repeating ACKs for one packet, which indicates a packet loss. So in my experiment where the RTT is evenly distributed on the links, the cwnd response time is t_response = B/2/C + 3*0.75*RTT.

3, After long lived TCP flows have started the RTT of the link would become very high. Then it would take a long time for new connections to start.

4, For one flow, its cwnd will be halved when cwnd = RTT*C + B. Then if B < RTT*C, cwnd would become less then RTT*C and the buffer would become empty. In this case the bottle neck link will not achieve full utilization. So to reach full utilization the minimum buffer size for one flow is RTT*C.

5,
a, The total_cwnd = nflows*2*RTT*C + B. So if I increase the number of flows, the total cwnd increases.

b, The minimum required buffer sized decreases when the number of flows increases. This is because the cwnd tends to be smoother with more flows.

6, When there are too many nodes or too much traffic in the emulation, Mininet may produce unstable and unprecise results. The results of Mininet may vary from time to time.
